require "autotest/restart"
require 'autotest/timestamp'
require 'test_notifier/runner/autotest'

EXPIRATION_IN_SECONDS = 3
ERROR_STOCK_ICON = "gtk-cancel"
WARNING_STOCK_ICON = "gtk-dialog-warning"
SUCCESS_STOCK_ICON = "gtk-ok"

def self.notify icon, title, message
  options = "-t #{EXPIRATION_IN_SECONDS * 1000} -i #{icon}"
  system "notify-send #{options} '#{title}' '#{message}'"
end

Autotest.add_hook :initialize do |autotest|
  %w{.git .svn .hg .DS_Store ._* vendor tmp log doc}.each do |exception|
    autotest.add_exception(exception)
  end

  # Ignore files in tmp/
  autotest.add_exception %r%^\./tmp%
end

Autotest.add_hook :ran_features do |autotest|
  gist = autotest.results.grep(/\d+\s+scenario.*\)/).join(" / ").strip()
  if gist == ''
    notify ERROR_STOCK_ICON, "Cannot run features", ""
  else
    if gist =~ /([1-9]\d*)\s+failed/
      notify ERROR_STOCK_ICON, "Some features failed", "#{$1} failed"
    elsif gist =~ /([1-9]\d*)\s+undefined/
      notify WARNING_STOCK_ICON, "Some features are undefined", "#{$1} undefined"
    elsif gist =~ /([1-9]\d*)\s+pending/
      notify WARNING_STOCK_ICON, "Some features are pending", "#{$1} pending"
    else
      notify SUCCESS_STOCK_ICON, "All features passed, good job!", ""
    end
  end
end